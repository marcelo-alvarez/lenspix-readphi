#directory of healpix /data/ directory, if black attempts to get from HEALPIX environment variable
#w8dir = /usr/local/healpix/data/
w8dir =


#Healpix nside
nside = __NSIDEREPLACE__

#note need lmax approx 250 larger than lmax you are interested in
lmax = __LMAXREPLACE__
#lmax of Julian's CMB is 5120 (according to healpy)
output_lmax = __OUTPUTLMAXREPLACE__

cls_file = sample_lenspotentialCls.dat
out_file_root = __OUTFILEROOTREPLACE__

#lens_method 1 uses fast pixel remapping, 2 is slow and exact
lens_method = 1

#The approx lensing is generated from a map at nside*interp_factor resolution
#For interp_method=0, must be power of 2; 8 seems OK for 0.5% accuracy on TT, EE up to l=2000 if nside = 1024
#For interp_method = 1, can be anything, 3 is very good for nside=1024, 1.5 for nside=2048
# - note for interp_method = 1 the number of high-res pixels around the equator is ~ 4*nside*interp_factor;
# - equivalent healpix mean pixel-centre separation would be for nside_healpix ~ nside*interp_factor/sqrt(2)
# - for high accuracy probably need interp_factor ~ 2048/nside*1.5
interp_factor = 6

#1 is using bicubic in equi-cylindical pixels, 0 is naive healpix remapping
interp_method = 1

#1: approx equal rows per MPI thread, 2: equal pixels (by SJS) is better for exact simulation; 3 balanced (usually best)
mpi_division_method = 3

want_pol = T

#Set to -1 not to fix seed
rand_seed = -1

#unlensed source file (alm)
primary_file = __PRIMARYFILEREPLACE__

#phi_file - kappa2phi output alm
phi_file = __PHIFILEREPLACE__

gradphi_file = __GRADPHIFILEREPLACE__

#lensed file
lensed_file = __LENSEDFILEREPLACE__
